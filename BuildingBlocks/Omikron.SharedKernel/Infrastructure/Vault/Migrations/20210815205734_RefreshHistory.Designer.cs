// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Omikron.SharedKernel.Infrastructure.Vault.Data;

namespace Omikron.SharedKernel.Infrastructure.Vault.Migrations
{
    [DbContext(typeof(VaultServiceDatabaseContext))]
    [Migration("20210815205734_RefreshHistory")]
    partial class RefreshHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("vault")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0679fd05-4c37-4eec-a029-62138d8e82b1"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("0679fd05-4c37-4eec-a029-62138d8e82b1"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Holiday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("3e28b304-faa8-4942-8c9b-4cf6fb6c621c"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("3e28b304-faa8-4942-8c9b-4cf6fb6c621c"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Car",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("61b49ed2-7b6a-46b3-bd20-efcbc914bcb1"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("61b49ed2-7b6a-46b3-bd20-efcbc914bcb1"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "House",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("769dd368-4d01-4aa1-80c7-17b5a82793bb"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("769dd368-4d01-4aa1-80c7-17b5a82793bb"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("59a9612e-3c12-46f5-863e-982444f64129"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("59a9612e-3c12-46f5-863e-982444f64129"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("9e4cb31c-60da-4e56-9efe-134a014114c6"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("9e4cb31c-60da-4e56-9efe-134a014114c6"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 4
                        },
                        new
                        {
                            Id = new Guid("7cf66e79-115b-4775-9e24-0b90a40e510c"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("7cf66e79-115b-4775-9e24-0b90a40e510c"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 5
                        },
                        new
                        {
                            Id = new Guid("6a9f3896-9901-4024-ab46-9ffe997cace3"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("6a9f3896-9901-4024-ab46-9ffe997cace3"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 6
                        },
                        new
                        {
                            Id = new Guid("5d031d63-ab9a-4c01-b407-8770b2418825"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("5d031d63-ab9a-4c01-b407-8770b2418825"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 7
                        },
                        new
                        {
                            Id = new Guid("0a4c0cbd-c03b-4206-a633-46fb118177c3"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("0a4c0cbd-c03b-4206-a633-46fb118177c3"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 8
                        },
                        new
                        {
                            Id = new Guid("c641f883-c946-4735-9a80-e09bde294378"),
                            CreatedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Currency = "GBP",
                            ExternalId = new Guid("c641f883-c946-4735-9a80-e09bde294378"),
                            ModifiedAt = new DateTime(2021, 8, 1, 17, 55, 0, 0, DateTimeKind.Utc),
                            Name = "Everyday",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Santader",
                            Source = 1,
                            Type = 9
                        });
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.AccountBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountBalances");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36916e63-7fd2-40e6-ac49-89d7d7b49feb"),
                            AccountId = new Guid("0679fd05-4c37-4eec-a029-62138d8e82b1"),
                            Amount = 1321.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(3179),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(4829),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(3197),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("e6396e72-a5d8-456b-9aad-2ed8a07e23c1"),
                            AccountId = new Guid("0679fd05-4c37-4eec-a029-62138d8e82b1"),
                            Amount = 13223.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6876),
                            EntryDate = new DateTime(2021, 8, 13, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6902),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6879),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("8fb12fd7-6094-4861-b08c-ccbb3eacfcc6"),
                            AccountId = new Guid("3e28b304-faa8-4942-8c9b-4cf6fb6c621c"),
                            Amount = 2223.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6937),
                            EntryDate = new DateTime(2021, 8, 13, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6943),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6938),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("4b1f5b7b-c84c-458b-a92b-bee55f9ff2e2"),
                            AccountId = new Guid("61b49ed2-7b6a-46b3-bd20-efcbc914bcb1"),
                            Amount = 5223.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6945),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6949),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6946),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("0359d5fd-4c73-4341-91a9-4c25a6680f8c"),
                            AccountId = new Guid("769dd368-4d01-4aa1-80c7-17b5a82793bb"),
                            Amount = 5223.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6950),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6954),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6951),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("5ae0f170-616b-4880-bf12-81ec0e72a8ac"),
                            AccountId = new Guid("59a9612e-3c12-46f5-863e-982444f64129"),
                            Amount = 2265.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6955),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6960),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6956),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("2eaac991-16fd-4da9-9501-401ad300a5c1"),
                            AccountId = new Guid("9e4cb31c-60da-4e56-9efe-134a014114c6"),
                            Amount = 52625.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6961),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6965),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6962),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("4d4dad1b-a197-4108-8a85-ec9316dc00d3"),
                            AccountId = new Guid("7cf66e79-115b-4775-9e24-0b90a40e510c"),
                            Amount = 232625.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6966),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6970),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6967),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("6ace353c-f1cc-4c08-9c5d-440eb0657b85"),
                            AccountId = new Guid("6a9f3896-9901-4024-ab46-9ffe997cace3"),
                            Amount = -1325.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6972),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6980),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6973),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("e268ae36-2de7-43ca-80a8-a8a3e30f668d"),
                            AccountId = new Guid("5d031d63-ab9a-4c01-b407-8770b2418825"),
                            Amount = -11325.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6982),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6985),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6983),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("6b4082da-f789-493f-8150-6f8f51bfed3a"),
                            AccountId = new Guid("0a4c0cbd-c03b-4206-a633-46fb118177c3"),
                            Amount = -66325.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6987),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6991),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6987),
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("7fec44ce-8e0d-475d-bf23-f351afaa59cc"),
                            AccountId = new Guid("c641f883-c946-4735-9a80-e09bde294378"),
                            Amount = -26325.23m,
                            CreatedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6992),
                            EntryDate = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6996),
                            ModifiedAt = new DateTime(2021, 8, 15, 20, 57, 34, 53, DateTimeKind.Utc).AddTicks(6993),
                            Type = 2
                        });
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.RefreshHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefreshHistories");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.AccountBalance", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Account", "Account")
                        .WithMany("AccountBalances")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Account", b =>
                {
                    b.Navigation("AccountBalances");
                });
#pragma warning restore 612, 618
        }
    }
}
