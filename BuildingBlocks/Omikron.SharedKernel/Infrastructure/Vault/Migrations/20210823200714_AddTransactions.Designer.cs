// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Omikron.SharedKernel.Infrastructure.Vault.Data;

namespace Omikron.SharedKernel.Infrastructure.Vault.Migrations
{
    [DbContext(typeof(VaultServiceDatabaseContext))]
    [Migration("20210823200714_AddTransactions")]
    partial class AddTransactions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("vault")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoanType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            CreatedAt = new DateTime(2021, 8, 23, 20, 7, 13, 905, DateTimeKind.Utc).AddTicks(3485),
                            Currency = "GBP",
                            ExpiryDate = new DateTime(2021, 8, 23, 20, 7, 43, 908, DateTimeKind.Utc).AddTicks(8445),
                            ExternalId = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            IdentificationNumber = "111111•11111111",
                            ImageUrl = "",
                            ModifiedAt = new DateTime(2021, 8, 23, 20, 7, 13, 905, DateTimeKind.Utc).AddTicks(3500),
                            Name = "Test",
                            OwnerId = "D15D234D-D886-4F14-B3B0-480CBBABF6B1",
                            Provider = "Lloyds",
                            Source = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.AccountBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BalanceType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountBalances");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MortgageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MortgageId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.PropertyValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyValues");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.RefreshHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefreshHistories");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MerchantIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93024c9c-013b-4635-82ba-842f4067f8f9"),
                            AccountId = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            Amount = 13.23m,
                            Category = "Electronics",
                            CreatedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(1984),
                            Currency = "GBP",
                            Date = new DateTime(2021, 8, 21, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(4559),
                            MerchantName = "Amazon",
                            ModifiedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(1997)
                        },
                        new
                        {
                            Id = new Guid("6a18dcff-d1f0-4067-bcd9-fc13c863e3c3"),
                            AccountId = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            Amount = 16.42m,
                            Category = "Gaming",
                            CreatedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(4985),
                            Currency = "GBP",
                            Date = new DateTime(2021, 8, 21, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5005),
                            MerchantName = "Steam",
                            ModifiedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(4988)
                        },
                        new
                        {
                            Id = new Guid("ea759c8f-6ee4-4231-83c0-27211c50f1ca"),
                            AccountId = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            Amount = 76.32m,
                            Category = "Groceries",
                            CreatedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5008),
                            Currency = "GBP",
                            Date = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5014),
                            MerchantName = "Target",
                            ModifiedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5009)
                        },
                        new
                        {
                            Id = new Guid("a7a9dfc3-67c2-401c-b436-74888bd9bf54"),
                            AccountId = new Guid("48ab7b04-218d-4205-a177-437db3d0a552"),
                            Amount = 123.23m,
                            Category = "Groceries",
                            CreatedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5015),
                            Currency = "GBP",
                            Date = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5020),
                            MerchantName = "Lidl",
                            ModifiedAt = new DateTime(2021, 8, 23, 20, 7, 13, 912, DateTimeKind.Utc).AddTicks(5016)
                        });
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.VaultItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AccountExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AccountIdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccountType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("VaultItems");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FinancialAgreementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mileage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Registration")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FinancialAgreementId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.VehicleValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleValues");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.AccountBalance", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Account", "Account")
                        .WithMany("AccountBalances")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Property", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Account", "Mortgage")
                        .WithMany("Properties")
                        .HasForeignKey("MortgageId");

                    b.Navigation("Mortgage");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.PropertyValue", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Property", "Property")
                        .WithMany("PropertyValues")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Transaction", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Vehicle", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Account", "FinancialAgreement")
                        .WithMany("Vehicles")
                        .HasForeignKey("FinancialAgreementId");

                    b.Navigation("FinancialAgreement");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.VehicleValue", b =>
                {
                    b.HasOne("Omikron.VaultService.Domain.Models.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleValues")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Account", b =>
                {
                    b.Navigation("AccountBalances");

                    b.Navigation("Properties");

                    b.Navigation("Transactions");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Property", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("Omikron.VaultService.Domain.Models.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleValues");
                });
#pragma warning restore 612, 618
        }
    }
}
